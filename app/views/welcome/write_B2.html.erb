      <div class="jumbotron">
        <h5>一字千金 模擬測試寫入頁面</h5>
      </div>
      <div style="float:left;">
        <div style="height:30px;padding:5px 0;">
          <button id="clearBtn" style="font-size:15px;">Clear</button>
          <!-- <button id="prevBtn" style="font-size:15px;">Prev</button> -->
          <button id="submitBtn" style="font-size:15px;">Submit</button>
          <input id="row" type="number" value="1" />
          <input id="column" type="number" value="1" />
          <button id="moveBlock" style="font-size:15px;">指定格子</button>
          <!-- <button id="endRound" style="font-size:15px;">結束回合</button> -->

        </div>
        <canvas id="origin_<%= @user_id %>" class="orgincanvas"></canvas>
      </div>
      <canvas id="multiple" class="orgincanvas hidden"></canvas>

      <% content_for :javascripts do %>
      
      <script>
      document.write('<script src="//'+ location.hostname + ':5001/socket.io/socket.io.js">\x3C/script>');
      </script>

      <script>
      // cache stage name for server1-tvwall.js
      window.stageName = '<%= @stage %>';
      window.pageType = "client";  // type: console, client, tv
      window.clientUserId = '<%= @user_id %>';

      window.isDrawing = false;

      </script>

      <%= javascript_include_tag 'socketevent-generator' %>
      <%= javascript_include_tag 'commons' %>
      <%= javascript_include_tag 'action-definition' %>
      <%= javascript_include_tag 'view-definition' %>
      <%= javascript_include_tag 'socketevent-hooker' %>

      <script>
      $(document).ready(function() {
        CM.prop({
          width: 500,
          height: 500,
          lineWidth: 15,
          lineColor: '#333333',
          targetZoomScale: 1,
          backgroundImage: '/assets/block-524.png'
        });

        CM.reg('origin_<%= @user_id %>');
        ocan = document.getElementById('origin_<%= @user_id %>');

        $("#clearBtn").click(View.onClearClick);
        $("#submitBtn").click(View.onSubmitClick);

        $('#moveBlock').click(function(){
          Commons.currentRow = parseInt($('#row').val());
          Commons.currentCol = parseInt($('#column').val());
          SocketController.triggerMoveBlock({
            user_id: Settings.clientUserId,
            block:{
              row: Commons.currentRow,
              column: Commons.currentCol
            }
          },"B2.");
          SocketController.triggerAction({
            action: "device_start",
            user_id: Settings.clientUserId,
            block:{
              row: Commons.currentRow,
              column: Commons.currentCol
            },
            stamp: (new Date()).getTime()
          },"B2.");
        });

        $('#origin_' + clientUserId).mousedown(function(e){
          isDrawing = true;
          var message = {
            user_id: clientUserId,
            x: e.clientX - ocan.offsetLeft,
            y: e.clientY - ocan.offsetTop,
            block:{
              row: Commons.currentRow,
              column: Commons.currentCol
            },
            stamp: (new Date()).getTime()
          };
          CM('origin_' + message.user_id).point({ x: message.x, y: message.y });
          SocketController.triggerDownLocation(message,"B2.");
        });
        
        $('#origin_' + clientUserId).mousemove(function(e){
          if (isDrawing){
            var message = {
              user_id: clientUserId,
              x: e.clientX - ocan.offsetLeft,
              y: e.clientY - ocan.offsetTop,
              block:{
                row: Commons.currentRow,
                column: Commons.currentCol
              },
              stamp: (new Date()).getTime()
            };
            CM('origin_' + message.user_id).line({ x: message.x, y: message.y });
            SocketController.triggerMoveLocation(message,"B2.");
          }
        });

        $('#origin_' + clientUserId).mouseup(function(e){
          isDrawing = false;
          SocketController.triggerUpLocation({user_id:clientUserId},"B2.");
        });

        // $('#endRound').click(function(){
        //   window.chatApp.endRound();
        // });

      });

      // var receiveActionHandler = function(data){
      //   var name = data.action;
      //   if (name == "start"){
      //     window.chatApp.dispatcher.emit('action',{
      //       user_id: data.user_id,
      //       action: "device_start",
      //       stamp: (new Date()).getTime()
      //     });
      //   }
      //   else if (name == "stop"){
      //     window.chatApp.dispatcher.emit('action',{
      //       user_id: data.user_id,
      //       action: "device_stop",
      //       stamp: (new Date()).getTime()
      //     });
      //   }
      //   console.log(name);
      // };

      </script>
      <% end %>