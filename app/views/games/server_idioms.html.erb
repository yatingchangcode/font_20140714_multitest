<% content_for :stylesheets do %>
<%= stylesheet_link_tag 'reset','tvwall' %>
<style type="text/css">
p.name{
  padding-bottom:6%;
}

body,.container{
  background-color: #000000;
  width: 100%;
  height:100%;
  //width: 1600px;
  //height:1000px;
}

.progress-bar {
  transition: width 0.1s;
}


</style>
<% end %>

<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td colspan="3" height="5%">&nbsp;</td>
  </tr>
  <tr>
    <td width="35%">&nbsp;</td>
    <td>    <div class="progress"> 
      <div id="progress_bar" class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
        <%= @second %>s
      </div>
    </div></td>
    <td width="35%">&nbsp;</td>
  </tr>
  <tr>
    <td>
      
    </td>
    <td>
      <button id="next_button" style="font-size:20px;">下一位</button>
      <input id="row" type="number" value="1" style="width:10%;" /><p style="color:white;display:inline">列</p>
      <input id="column" type="text" value="1" style="width:10%;" /><p style="color:white;display:inline">行</p>
      <input id="showText" type="text" value="" style="width:10%;" />
      <button id="showTextButton">出題</button>
    </td>
    <td>
      <button id="undoButton" style="margin-right:10px;">回溯</button>
      <button id="redoButton">重做</button>
    </td>
  </tr>
  
</table>

<div class="Content"> 
  <table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr>
      <td colspan="5">&nbsp;</td>
    </tr>

    <tr>
      <td width="9%"></td>

      <td valign="top" width="9%">
        <div class="box_b">
          <table width="100%" height="100%" border="0" cellspacing="0" cellpadding="0">
            <tr class="nameTop">
              <td>&nbsp;</td>
            </tr>
            <tr>
              <td><p class="name"><%= @visitors[0].name %></p></td>
            </tr>
            <tr>
              <td>
                <div id="user_photo_<%= @visitors[0].number %>" class="photo">
                  <%= render_gamer_photo(@visitors[0],"medium",'100%','100%','') %>
                </div>
              </td>
            </tr>
            <tr>
              <td>
                <button id="start_button_<%= @visitors[0].number %>" style="font-size:12px;" value="<%= @visitors[0].number %>" type="button" class="btn btn-default navbar-btn">Start</button>
                <button id="stop_button_<%= @visitors[0].number %>" style="font-size:12px;" value="<%= @visitors[0].number %>" type="button" class="btn btn-default navbar-btn">Stop</button>
                <button id="continue_<%= @visitors[0].number %>" style="font-size:12px;" value="<%= @visitors[0].number %>" type="button" class="btn btn-default navbar-btn">繼續寫</button>
              </td>
            </tr>

          </table>
        </div>
      </td>

      <td width="2%">&nbsp;</td>

      <td width="56%">
        <table class="Chessboard" width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td>&nbsp;</td>
            <td width="8%"><p>A</p></td>
            <td width="8%"><p>B</p></td>
            <td width="8%"><p>C</p></td>
            <td width="8%"><p>D</p></td>
            <td width="8%"><p>E</p></td>
            <td width="8%"><p>F</p></td>
            <td width="8%"><p>G</p></td>
            <td width="8%"><p>H</p></td>
            <td width="8%"><p>I</p></td>
            <td width="8%"><p>J</p></td>
            <td width="8%"><p>K</p></td>
            <td width="8%"><p>L</p></td>
          </tr>

          <% (1..8).to_a.each do |x| %>
          <tr>
            <td>
              <p><%= x %></p>
            </td>
            <% (1..12).to_a.each do |y| %>
            <td>
              <div id="grid_<%= x %>_<%= y %>" class="Grid bor_g">
                <div id="glow_<%= x %>_<%= y %>" class="inner_glow"><img src="/assets/tvwall/img_Grid_g_green.png" width="100%"/></div>
                <button name="clear" value="<%= x %>,<%= y %>" type="button" class="btn btn-xs btn-default" style="position:absolute;opacity:0.6">Clear</button>
                <canvas id="origin_<%= x %>_<%= y %>" width="100%" ></canvas>
              </div>
            </td>
            <% end %>
          </tr>
          <% end %>

        </table>
      </td>

      <td width="2%">&nbsp;</td>

      <td valign="top" width="9%">
        <div class="box_b">
          <table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tr class="nameTop">
              <td>&nbsp;</td>
            </tr>
            <tr>
              <td><p class="name"><%= @visitors[1].name %></p></td>
            </tr>
            <tr>
              <td>
                <div class="TopBpx">
                  <div id="user_photo_<%= @visitors[1].number %>" class="photo">
                    <%= render_gamer_photo(@visitors[1],"medium",'100%','100%','') %>
                  </div>
                </div>
              </td>
            </tr>
            <tr>
              <td>
                <button id="start_button_<%= @visitors[1].number %>" style="font-size:12px;" value="<%= @visitors[1].number %>" type="button" class="btn btn-default navbar-btn">Start</button>
                <button id="stop_button_<%= @visitors[1].number %>" style="font-size:12px;" value="<%= @visitors[1].number %>" type="button" class="btn btn-default navbar-btn">Stop</button>
                <button id="continue_<%= @visitors[1].number %>" style="font-size:12px;" value="<%= @visitors[1].number %>" type="button" class="btn btn-default navbar-btn">繼續寫</button>
              </td>
            </tr>
          </table>
        </div>
      </td>

      <td width="13%"></td>
    </tr>

  </table>
</div>



<% content_for :javascripts do %>
<script>
document.write('<script src="//'+ location.hostname + ':5001/socket.io/socket.io.js">\x3C/script>');
</script>

<script>
// cache stage name for server1-tvwall.js
window.stageName = '<%= @stage %>';
window.pageType = "console";  // type: console, client, tv

<% if @second.to_i > 0 %>
window.timeRemaining = <%= @second %>;
<% end %>

</script>

<%= javascript_include_tag 'socketevent-generator' %>
<%= javascript_include_tag 'commons' %>
<%= javascript_include_tag 'action-definition' %>
<%= javascript_include_tag 'view-definition' %>
<%= javascript_include_tag 'socketevent-hooker' %>

<script>

// window.fromServerCommand = false;

// var updateTrackButtons = function(){  
//   $("#undoButton").attr("disabled", !(trackCache.hasUndo() && !window.alarm));
//   $("#redoButton").attr("disabled", !(trackCache.hasRedo() && !window.alarm));
// };

// var blockCancelOneSubmitSetStyle = function(o){
//   $('#glow_'+o.block.row+'_'+o.block.column).hide();
// };

// var blockSubmitSetStyle = function(o){
//   $('#glow_'+o.block.row+'_'+o.block.column).show();
// };

// //後台取消確認
// var blockCancelSubmitSetStyle = function(o){
//   for(var x=1;x<=8;x++){
//     for(var y=1;y<=12;y++){
//       var c = document.getElementById('glow_'+x+'_'+y);
//       $(c).hide();
//     }
//   }
// };

// function startCounter(thisvalue) {
//   console.log(window.alarm);
//   if(window.alarm) return;
//   var s = parseFloat($('#progress_bar').text()).toFixed(1);
//     //if (s === (0.0).toFixed(1)) resetProgressBarAndTime();
//   window.alarm = setInterval(function(){
//     var s = parseFloat($('#progress_bar').text()).toFixed(1);
//     if (s > 0){
//       setProgressBarAndTime(s);
//     } else {
//       clearInterval(window.alarm);
//       window.alarm = null;
//       gamers.all().forEach(function(e){
//         window.chatApp.action(e,'stop');
//         //receiveSubmitHandler({user_id:e});
//       });
//       if(tvwall && tvwall.clearTimebar) tvwall.clearTimebar();
//     }
//   }, 100); 
// }

// function continueWriteSet(c){
//   gamers.setActive(c);
//   startCounter(c);
//   $('#user_photo_'+c).addClass("green");
// }

// function startSetStyle(c) {
//   $('#user_photo_'+c).addClass("green");
// }

// function stopSetStyle(c) {
//   $('#user_photo_'+c).removeClass("green");
//   blockCancelSubmitSetStyle();
//   updateTrackButtons();
// }
// function resetProgressBarAndTime() {
//   $('#progress_bar').css("width", "100%").attr("aria-valuenow","100%").text(window.timeRemaining+"s");
//   console.log(window.timeRemaining);
// }

// function setProgressBarAndTime(s) {
//   var percent = 100 * (s-0.1) / window.timeRemaining;
//   $('#progress_bar').css("width", percent+"%").attr('aria-valuenow', percent).text((s-0.1).toFixed(1)+"s");
// }

//var alarm = {};
var tvwall = window.open("tvwall_<%= params[:stage] %>?join_visitors_number=<%= params[:join_visitors_number] %>&second=<%= @second %>","tvwallWindow","width=800, height=800");
//window.open("record_idioms?join_visitors_number=<%= params[:join_visitors_number] %>","recordWindow","width=800, height=800");

// window.timeRemaining = parseInt(<%= @second %>);
// window.alarm = null;

$(document).ready(function() {
  CM.prop({
    width: 500,
    height: 500,
    lineWidth: 13,
    lineColor: '#ececec',
    targetZoomScale: 0.015,
    responsiveByParent: true,
    backgroundImage: '/assets/tvwall/img_Grid_g.gif'
  });
  
  var gamerList = [];
  <% @visitors.each do |visitor| %>
  gamerList.push('<%= visitor.number %>');
  <% end %>

  View.registerCanvas(gamerList);
  View.collectGamers(gamerList);

  View.updateTrackButtons(true);

  // window.chatApp = new ChatApp(500,500,'0');
  // window.chatApp.bindEvents();
  // window.chatApp.reset({stage:'<%= params[:stage] %>'});
  // window.chatApp.setGameInfo(<%= @game.id %>, "<%= @stage %>", "<%= @visitors.to_json %>");

  SocketController.triggerReset({stage:'<%= params[:stage] %>'},"idioms.");
  SocketController.triggerSetGameinfoToSocket({
    game: <%= @game.id %>,
    stage: "<%= @stage %>",
    visitors: "<%= @visitors.to_json %>"
  },"idioms.");

  // (function collectGamers() {
  //   <% @visitors.each do |visitor| %>
  //   gamers.push('<%= visitor.number %>');
  //   <% end %>
  // })();


  // $('[id^=start_button_]').click(function(){
  //   resetProgressBarAndTime();
  //   window.chatApp.action(this.value,'start');
  // });

  $('[id^=start_button_]').click(View.onStartClick);

  // $('[id^=stop_button_]').click(function(){

  //  window.chatApp.action(this.value,'stop');
  //    //receiveSubmitHandler({user_id:this.value});
  // });

  $('[id^=stop_button_]').click(View.onStopClick);

  // Use clear block and start instead.
  // $('[id^=continue_]').click(function(){
  //   window.chatApp.continue_write(this.value);
  //   //window.chatApp.cancelSubmit(this.value);
  //   //$('#visitor_'+this.value).css("background-color", "");
  // });
  
  $('[id^=continue_]').click(View.onContinueWriteClick);
  
  // $('#next_button').click(function(){
  //   // stop last user
  //   if (gamers.prev() != null) {
  //     window.chatApp.action(gamers.prev(),'stop');
  //   }
  //   var newgamer = gamers.next();
  //   // call old gamer to stop
  //   // call new user to clear screen
  //   resetProgressBarAndTime();
  //   window.chatApp.action(newgamer,'start');
  //   //there is not setActive?
  //   // startSetStyle(newgamer);
  //   // startCounter(newgamer);
  // });

  $('#next_button').click(View.onNextQuestionClick);

  // $('[name^=clear]').click(function(){
  //   var xy = this.value.split(',');
  //   var block = { row: xy[0], column:xy[1] };
  //   fromServerCommand = true;
  //   window.chatApp.clear(0,block);
  // });

  $('[name^=clear]').click(View.onClearBlockClick);

  // $('#showTextButton').click(function(){
  //   var row = parseInt($('#row').val());
  //   var originCol = $('#column').val();
  //   var col = parseInt(originCol);
  //   var columnArray = ['a','b','c','d','e','f','g','h','i','j','k','l'];
  //   if(isNaN(col)){
  //     var idx = columnArray.indexOf(originCol.toLowerCase());
  //     if(idx != -1){
  //       col = (idx + 1).toString();
  //     }
  //   }
  //   var text = $('#showText').val();
  //   var block = {row: row, column: col};
  //   fromServerCommand = true;
  //   window.chatApp.sendText(text, block);
  // });

  $('#showTextButton').click(View.onShowTextClick);

  // $('#undoButton').click(function(){
  //   var track = trackCache.getUndo();
  //   if(track){
  //     var commandName = '';
  //     var first = '';
  //     switch(track.action){
  //       case 'rewrite':
  //         commandName = 'rewrite';
  //         first = track.ink;
  //         break;
  //       case 'text':
  //         commandName = 'sendText';
  //         first = track.text;
  //         break;
  //       case 'clear':
  //         commandName = 'clear';
  //         first = 0;
  //         break;
  //     }
  //     if(commandName){
  //       window.chatApp[commandName](first, track.block);
  //       console.log(commandName + ': ' + JSON.stringify(track.block) + ' <' + JSON.stringify(first) + '> ');
  //     }
  //   }
  //   View.updateTrackButtons();
  // });

  $('#undoButton').click(View.onUndoClick);

  // $('#redoButton').click(function(){
  //   var track = trackCache.getRedo();
  //   if(track){
  //     var commandName = '';
  //     var first = '';
  //     switch(track.action){
  //       case 'rewrite':
  //         commandName = 'rewrite';
  //         first = track.ink;
  //         break;
  //       case 'text':
  //         commandName = 'sendText';
  //         first = track.text;
  //         break;
  //       case 'clear':
  //         commandName = 'clear';
  //         first = 0;
  //         break;
  //     }
  //     if(commandName){
  //       window.chatApp[commandName](first, track.block);
  //       console.log(commandName + ': ' + JSON.stringify(track.block) + ' <' + JSON.stringify(first) + '> ');
  //     }
  //   }
  //   View.updateTrackButtons();
  // });

  $('#redoButton').click(View.onRedoClick);

});
</script>
<% end %>
